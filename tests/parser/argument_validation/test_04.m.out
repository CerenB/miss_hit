----------------------------------------------------------------------
--  Parse tree for test_04.m
Root: Function_File
  Functions: Function_Definition
    Signature: Function_Signature
      Name: Identifier <test_04>
      Inputs: Identifier <x>
      Inputs: Identifier <v>
      Inputs: Identifier <method>
    Validation: Arguments Special_Block
      Items: Entity_Constraints
        Dimension 1 constraint: 1
        Dimension 2 constraint: COLON
        Name: Identifier <x>
        Functions: Identifier <mustBeNumeric>
        Functions: Identifier <mustBeReal>
      Items: Entity_Constraints
        Dimension 1 constraint: 1
        Dimension 2 constraint: COLON
        Name: Identifier <v>
        Functions: Identifier <mustBeNumeric>
        Functions: Identifier <mustBeReal>
        Functions: Reference
          Name: Identifier <mustBeEqualSize>
          Arguments: Identifier <v>
          Arguments: Identifier <x>
      Items: Entity_Constraints
        Dimension 1 constraint: 1
        Dimension 2 constraint: COLON
        Name: Identifier <method>
        Class: Identifier <char>
        Functions: Reference
          Name: Identifier <mustBeMember>
          Arguments: Identifier <method>
          Arguments: Cell_Expression
            Rows: Row
              Items: Char_Array_Literal 'linear'
              Items: Char_Array_Literal 'cubic'
              Items: Char_Array_Literal 'spline'
        Default: Char_Array_Literal 'linear'
    Body: Sequence_Of_Statements
  Functions: Function_Definition
    Signature: Function_Signature
      Name: Identifier <mustBeEqualSize>
      Inputs: Identifier <a>
      Inputs: Identifier <b>
    Body: Sequence_Of_Statements
      Statements: If_Statement
        Action: If Action
          Guard: Unary_Operation ~
            Expression: Reference
              Name: Identifier <isequal>
              Arguments: Reference
                Name: Identifier <size>
                Arguments: Identifier <a>
              Arguments: Reference
                Name: Identifier <size>
                Arguments: Identifier <b>
          Body: Sequence_Of_Statements
            Statements: Naked_Expression_Statement
              Expression: Reference
                Name: Identifier <error>
                Arguments: Char_Array_Literal 'Size of first input must equal size of second input'
----------------------------------------------------------------------
In test_04.m, line 3
| function test_04(x,v,method)
|                 ^ info: this token is not linked to the ast
In test_04.m, line 3
| function test_04(x,v,method)
|                   ^ info: this token is not linked to the ast
In test_04.m, line 3
| function test_04(x,v,method)
|                     ^ info: this token is not linked to the ast
In test_04.m, line 3
| function test_04(x,v,method)
|                            ^ info: this token is not linked to the ast
In test_04.m, line 5
|         x (1,:) {mustBeNumeric,mustBeReal}
|           ^ info: this token is not linked to the ast
In test_04.m, line 5
|         x (1,:) {mustBeNumeric,mustBeReal}
|             ^ info: this token is not linked to the ast
In test_04.m, line 5
|         x (1,:) {mustBeNumeric,mustBeReal}
|               ^ info: this token is not linked to the ast
In test_04.m, line 5
|         x (1,:) {mustBeNumeric,mustBeReal}
|                 ^ info: this token is not linked to the ast
In test_04.m, line 5
|         x (1,:) {mustBeNumeric,mustBeReal}
|                               ^ info: this token is not linked to the ast
In test_04.m, line 5
|         x (1,:) {mustBeNumeric,mustBeReal}
|                                          ^ info: this token is not linked to the ast
In test_04.m, line 6
|         v (1,:) {mustBeNumeric,mustBeReal,mustBeEqualSize(v,x)}
|           ^ info: this token is not linked to the ast
In test_04.m, line 6
|         v (1,:) {mustBeNumeric,mustBeReal,mustBeEqualSize(v,x)}
|             ^ info: this token is not linked to the ast
In test_04.m, line 6
|         v (1,:) {mustBeNumeric,mustBeReal,mustBeEqualSize(v,x)}
|               ^ info: this token is not linked to the ast
In test_04.m, line 6
|         v (1,:) {mustBeNumeric,mustBeReal,mustBeEqualSize(v,x)}
|                 ^ info: this token is not linked to the ast
In test_04.m, line 6
|         v (1,:) {mustBeNumeric,mustBeReal,mustBeEqualSize(v,x)}
|                               ^ info: this token is not linked to the ast
In test_04.m, line 6
|         v (1,:) {mustBeNumeric,mustBeReal,mustBeEqualSize(v,x)}
|                                          ^ info: this token is not linked to the ast
In test_04.m, line 6
|         v (1,:) {mustBeNumeric,mustBeReal,mustBeEqualSize(v,x)}
|                                                          ^ info: this token is not linked to the ast
In test_04.m, line 6
|         v (1,:) {mustBeNumeric,mustBeReal,mustBeEqualSize(v,x)}
|                                                            ^ info: this token is not linked to the ast
In test_04.m, line 6
|         v (1,:) {mustBeNumeric,mustBeReal,mustBeEqualSize(v,x)}
|                                                              ^ info: this token is not linked to the ast
In test_04.m, line 6
|         v (1,:) {mustBeNumeric,mustBeReal,mustBeEqualSize(v,x)}
|                                                               ^ info: this token is not linked to the ast
In test_04.m, line 7
|         method (1,:) char {mustBeMember(method,{'linear','cubic','spline'})} = 'linear'
|                ^ info: this token is not linked to the ast
In test_04.m, line 7
|         method (1,:) char {mustBeMember(method,{'linear','cubic','spline'})} = 'linear'
|                  ^ info: this token is not linked to the ast
In test_04.m, line 7
|         method (1,:) char {mustBeMember(method,{'linear','cubic','spline'})} = 'linear'
|                    ^ info: this token is not linked to the ast
In test_04.m, line 7
|         method (1,:) char {mustBeMember(method,{'linear','cubic','spline'})} = 'linear'
|                           ^ info: this token is not linked to the ast
In test_04.m, line 7
|         method (1,:) char {mustBeMember(method,{'linear','cubic','spline'})} = 'linear'
|                                        ^ info: this token is not linked to the ast
In test_04.m, line 7
|         method (1,:) char {mustBeMember(method,{'linear','cubic','spline'})} = 'linear'
|                                               ^ info: this token is not linked to the ast
In test_04.m, line 7
|         method (1,:) char {mustBeMember(method,{'linear','cubic','spline'})} = 'linear'
|                                                         ^ info: this token is not linked to the ast
In test_04.m, line 7
|         method (1,:) char {mustBeMember(method,{'linear','cubic','spline'})} = 'linear'
|                                                                 ^ info: this token is not linked to the ast
In test_04.m, line 7
|         method (1,:) char {mustBeMember(method,{'linear','cubic','spline'})} = 'linear'
|                                                                           ^ info: this token is not linked to the ast
In test_04.m, line 7
|         method (1,:) char {mustBeMember(method,{'linear','cubic','spline'})} = 'linear'
|                                                                            ^ info: this token is not linked to the ast
In test_04.m, line 7
|         method (1,:) char {mustBeMember(method,{'linear','cubic','spline'})} = 'linear'
|                                                                              ^ info: this token is not linked to the ast
In test_04.m, line 8
|     end
|     ^^^ info: this token is not linked to the ast
In test_04.m, line 11
| end
| ^^^ info: this token is not linked to the ast
In test_04.m, line 14
| function mustBeEqualSize(a,b)
|                         ^ info: this token is not linked to the ast
In test_04.m, line 14
| function mustBeEqualSize(a,b)
|                           ^ info: this token is not linked to the ast
In test_04.m, line 14
| function mustBeEqualSize(a,b)
|                             ^ info: this token is not linked to the ast
In test_04.m, line 16
|     if ~isequal(size(a),size(b))
|                ^ info: this token is not linked to the ast
In test_04.m, line 16
|     if ~isequal(size(a),size(b))
|                     ^ info: this token is not linked to the ast
In test_04.m, line 16
|     if ~isequal(size(a),size(b))
|                       ^ info: this token is not linked to the ast
In test_04.m, line 16
|     if ~isequal(size(a),size(b))
|                        ^ info: this token is not linked to the ast
In test_04.m, line 16
|     if ~isequal(size(a),size(b))
|                             ^ info: this token is not linked to the ast
In test_04.m, line 16
|     if ~isequal(size(a),size(b))
|                               ^ info: this token is not linked to the ast
In test_04.m, line 16
|     if ~isequal(size(a),size(b))
|                                ^ info: this token is not linked to the ast
In test_04.m, line 17
|         error('Size of first input must equal size of second input');
|              ^ info: this token is not linked to the ast
In test_04.m, line 17
|         error('Size of first input must equal size of second input');
|                                                                    ^ info: this token is not linked to the ast
In test_04.m, line 17
|         error('Size of first input must equal size of second input');
|                                                                     ^ info: this token is not linked to the ast
In test_04.m, line 18
|     end
|     ^^^ info: this token is not linked to the ast
In test_04.m, line 19
| end
| ^^^ info: this token is not linked to the ast
MISS_HIT Summary: 1 file(s) analysed, everything seemes fine
